@model Staff
@using SmartAdminMvc.Helpers

<link rel="stylesheet" type="text/css" media="screen" href="/Content/css/your_style.css">

<div id="content">

    <div class="row">
        <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
            <h1 class="page-title txt-color-blueDark">
                <i class="fa fa-user fa-fw "></i>
                Staff Information
            </h1>
        </div>
        <div class="col-xs-12 col-sm-5 col-md-5 col-lg-8">
            <ul id="sparks" class="">
                <li class="sparks-info">
                    <h5> My Income <span class="txt-color-blue">$47,171</span></h5>
                    <div class="sparkline txt-color-blue hidden-mobile hidden-md hidden-sm">
                        1300, 1877, 2500, 2577, 2000, 2100, 3000, 2700, 3631, 2471, 2700, 3631, 2471
                    </div>
                </li>
                <li class="sparks-info">
                    <h5> Site Traffic <span class="txt-color-purple"><i class="fa fa-arrow-circle-up" data-rel="bootstrap-tooltip" title="Increased"></i>&nbsp;45%</span></h5>
                    <div class="sparkline txt-color-purple hidden-mobile hidden-md hidden-sm">
                        110,150,300,130,400,240,220,310,220,300, 270, 210
                    </div>
                </li>
                <li class="sparks-info">
                    <h5> Site Orders <span class="txt-color-greenDark"><i class="fa fa-shopping-cart"></i>&nbsp;2447</span></h5>
                    <div class="sparkline txt-color-greenDark hidden-mobile hidden-md hidden-sm">
                        110,150,300,130,400,240,220,310,220,300, 270, 210
                    </div>
                </li>
            </ul>
        </div>
    </div>

    <!-- widget grid -->
    <section id="widget-grid" class="">

        <!-- row -->
        <div class="tablecontainer">

            <!-- NEW WIDGET START -->
            <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget jarviswidget-color-blueDark" id="wid-id-1" data-widget-editbutton="false" data-widget-collapsed="false" data-widget-deletebutton="false" data-widget-colorbutton="false" data-widget-fullscreenbutton="false">
                    <!-- widget options:
                    usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                    data-widget-colorbutton="false"
                    data-widget-editbutton="false"
                    data-widget-togglebutton="false"
                    data-widget-deletebutton="false"
                    data-widget-fullscreenbutton="false"
                    data-widget-custombutton="false"
                    data-widget-collapsed="true"
                    data-widget-sortable="false"

                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-user"></i> </span>
                        <h2>Staffs</h2>

                    </header>

                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body no-padding">
                            <table id="StaffDatatable" class="table table-striped table-bordered table-hover " style="width:100%;">

                                <thead>
                                    <tr>
                                        <th class="hasinput" style="width:10%">
                                            <input type="text" class="form-control" placeholder="Filter Staff Name" />
                                        </th>
                                        <th class="hasinput" style="width:20%">
                                            <input type="text" class="form-control" placeholder="Filter Home Phone" />
                                        </th>
                                        <th class="hasinput" style="width:20%">
                                            <input type="text" class="form-control" placeholder="Filter Address" />
                                        </th>
                                        <th class="hasinput" style="width:20%">
                                            <input type="text" class="form-control" placeholder="Filter City" />
                                        </th>
                                        <th class="hasinput" style="width:8%">
                                            <input type="text" class="form-control" placeholder="Filter Region" />
                                        </th>
                                        <th class="hasinput" style="width:8%">
                                            <input type="text" class="form-control" placeholder="Filter Postal Code" />
                                        </th>
                                        <th class="hasinput" style="width:8%">
                                            <input type="text" class="form-control" placeholder="Filter Country" />
                                        </th>
                                        <th style="width:3%;">
                                            <input type="button" class="btn btn-primary btn-xs btn-info" value="Add New Staff" data-toggle="modal" data-target="#myModal" />
                                        </th>
                                    </tr>
                                    <tr>
                                        <th data-class="expand">Staff Name</th>
                                        <th data-hide="phone,tablet">Home Phone</th>
                                        <th data-hide="phone,tablet">Address</th>
                                        <th data-hide="phone,tablet">City</th>
                                        <th data-hide="phone,tablet">State</th>
                                        <th data-hide="phone,tablet">Country</th>
                                        <th data-hide="phone,tablet">Postal Code</th>
                                        <th data-hide="phone,tablet">Country</th>
                                        <th data-hide="phone,tablet">Edit</th>
                                        @*<th data-hide="phone,tablet">Delete</th>*@
                                    </tr>
                                </thead>

                                <tfoot>
                                    <tr>
                                        <th data-class="expand">Staff Name</th>
                                        <th data-hide="phone,tablet">Home Phone</th>
                                        <th data-hide="phone,tablet">Address</th>
                                        <th data-hide="phone,tablet">City</th>
                                        <th data-hide="phone,tablet">Region</th>
                                        <th data-hide="phone,tablet">Postal Code</th>
                                        <th data-hide="phone,tablet">Country</th>
                                        <th data-hide="phone,tablet">Edit</th>
                                        @*<th data-hide="phone,tablet">Delete</th>*@
                                    </tr>
                                </tfoot>

                            </table>


                            @*</div>*@

                        </div>
                        <!-- end widget content -->

                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->

            </article>
            <!-- WIDGET END -->

        </div>

        <!-- end row -->

    </section>
    <!-- end widget grid -->
    <!-- Modal -->


        <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-hidden="true">
            <div class="modal-dialog" style="width:700px;">
                @*<div class="modal-content animated bounceInRight">*@
                <div class="modal-content animated flipInX">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                            &times;
                        </button>
                        <h4 class="modal-title">
                            <img src="/content/img/logo.png" width="150" alt="SmartAdmin">
                        </h4>
                    </div>
                    <div class="modal-body no-padding">
                        @using (Html.BeginForm("Save", "Staffs", FormMethod.Post, new { @class = "smart-form",  @id = "checkout-form", @enctype = "multipart/form-data" }))
                        {
                                <fieldset style="border:0 none;">
                                    <div class="row">
                                        <section class="col col-6">
                                            <label style="font-weight: bold;">First Name</label>
                                            <label class="input">
                                                <i class="icon-prepend fa fa-user"></i>
                                                @Html.TextBoxFor(m => m.FirstName, new { @type = "text", @name = "fname", @placeholder = "First Name" })
                                            </label>
                                            <label style="font-weight: bold;">Last Name</label>
                                            <label class="input">
                                                <i class="icon-prepend fa fa-user"></i>
                                                @Html.TextBoxFor(m => m.LastName, new { @type = "text", @name = "lname", @placeholder = "Last Name" })
                                            </label>
                                            <label style="font-weight: bold;">Gender</label>
                                            <label class="input">
                                                @Html.DropDownListFor(m => m.Gender, DropdownListHelper.GetGenderList(),new { @class= "form-control input-sm" })
                                            </label>
                                            <label style="font-weight: bold;">Street Address</label>
                                            <label class="input">
                                                @Html.TextAreaFor(m => m.Address, new { @rows = "1", @class = "form-control", @cols = "31", @type = "text", @name = "lname", @placeholder = "Your Street Address" })
                                            </label>
                                            <label style="font-weight: bold;">Country</label>
                                            <label class="input">
                                                @Html.DropDownListFor(m => m.Country, DropdownListHelper.GetCountryList(), new { @class = "form-control input-sm" })
                                            </label>
                                            <label style="font-weight: bold;">City</label>
                                            <label class="input">
                                                @Html.TextBoxFor(m => m.City, new { @type = "text", @name = "city", @placeholder = "City" })
                                            </label>
                                            <div class="row">
                                                <section class="col col-6">
                                                    <label style="font-weight: bold;">State</label>
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.Region, new { @type = "text", @name = "state", @placeholder = "State" })
                                                    </label>
                                                </section>
                                                <section class="col col-6">
                                                    <label style="font-weight: bold;">Postal Code</label>
                                                    <label class="input">
                                                        <i class="icon-prepend fa fa-user"></i>
                                                        @Html.TextBoxFor(m => m.PostalCode, new { @type = "text", @name = "lname", @placeholder = "Postal Code" })
                                                    </label>
                                                </section>
                                            </div>

                                            <label style="font-weight: bold;">Contractor/Temp</label>
                                            <label class="input">
                                                @Html.DropDownListFor(m => m.Contractor, DropdownListHelper.GetContractorList(), new { @class = "form-control input-sm" })
                                            </label>
                                            <label style="font-weight: bold;">W9/Insurance Form</label>
                                            <label class="input">
                                                <label for="file" class="input input-file">
                                                    <input type="file" name="Insurance[]" id="Insurance" class="inputfile inputfile-1" data-multiple-caption="{count} files selected" multiple />
                                                </label>
                                            </label>
                                        </section>
                                        <section class="col col-6">
                                            <div class="row " style="align-content:center !important">
                                                <section class="col col-lg-12">
                                                    <img src="#" height="70" alt="Staff Photo" />
                                                    <input type="file" name="StaffPhoto[]" id="StaffPhoto" class="inputfile inputfile-1" data-multiple-caption="{count} files selected" multiple />
                                                </section>

                                            </div>
                                            <label style="font-weight: bold;">Staff Number</label>
                                            <label class="input">
                                                <i class="icon-prepend fa fa-user"></i>
                                                @Html.TextBoxFor(m => m.StaffNumber, new { @type = "text", @name = "staffnumber", @placeholder = "Staff Number" })
                                            </label>
                                            <label style="font-weight: bold;">Job Title</label>
                                            <label class="input">
                                                <i class="icon-prepend fa fa-user"></i>
                                                @Html.TextBoxFor(m => m.JobTitle, new { @type = "text", @name = "jobtitle", @placeholder = "Job Title" })
                                            </label>
                                            <label style="font-weight: bold;">Department Name</label>
                                            <label class="input">
                                                @Html.DropDownListFor(m => m.DepartmentID, DropdownListHelper.GetDepartmentList(), new { @class = "form-control input-sm" })
                                            </label>
                                            <label style="font-weight: bold;">Email</label>
                                            <label class="input">
                                                <i class="icon-prepend fa fa-user"></i>
                                                @Html.TextBoxFor(m => m.EmailID, new { @type = "email", @name = "emailid", @placeholder = "Email ID" })
                                            </label>
                                            <label style="font-weight: bold;">Password</label>
                                            <label class="input">
                                                <i class="icon-prepend fa fa-user"></i>
                                                @Html.PasswordFor(m => m.Password, new { @type = "password", @name = "password", @placeholder = "Enter your Password" })
                                            </label>
                                            <label style="font-weight: bold;">Mobile Phone</label>
                                            <label class="input">
                                                <i class="icon-prepend fa fa-user"></i>
                                                @Html.TextBoxFor(m => m.MobilePhone, new { @type = "text", @name = "mobile", @placeholder = "Mobile No" })
                                            </label>
                                            <label style="font-weight: bold;">Birthdate</label>
                                            <label class="input">
                                                <i class="icon-prepend fa fa-user"></i>
                                                @Html.TextBoxFor(m => m.BirthDate, new { @type = "date", @name = "BirthDate", @placeholder = "Birth Date" })
                                            </label>
                                        </section>
                                    </div>

                                </fieldset>
                                <footer class="modal-footer">
                                    <input type="submit" value="Save" name="Save" class="btn btn-success btn-sm" />
                                    <button type="button" class="btn btn-danger btn-sm" data-dismiss="modal">Delete</button>
                                    <button type="button" class="btn btn-dark btn-sm" data-dismiss="modal">Cancel</button>
                                </footer>
                            
                        }

                    </div>

                </div><!-- /.modal-content -->
            </div><!-- /.modal-dialog -->
        </div><!-- /.modal -->
    </div>

    @section pagespecific {
        <script type="text/javascript">

            // DO NOT REMOVE : GLOBAL FUNCTIONS!

            $(document).ready(function () {

                /* // DOM Position key index //

                l - Length changing (dropdown)
                f - Filtering input (search)
                t - The Table! (datatable)
                i - Information (records)
                p - Pagination (paging)
                r - pRocessing
                < and > - div elements
                <"#id" and > - div with an id
                <"class" and > - div with a class
                <"#id.class" and > - div with an id and class

                Also see: http://legacy.datatables.net/usage/features
                */

                /* BASIC ;*/
                var responsiveHelper_dt_basic = undefined;
                var responsiveHelper_datatable_fixed_column = undefined;
                var responsiveHelper_datatable_col_reorder = undefined;
                var responsiveHelper_datatable_tabletools = undefined;

                var breakpointDefinition = {
                    tablet: 1024,
                    phone: 480
                };

                $('#dt_basic').dataTable({
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_dt_basic) {
                            responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_dt_basic.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_dt_basic.respond();
                    }
                });

                /* END BASIC */

                /* COLUMN FILTER  */
                var otable = $('#datatable_fixed_column').DataTable({
                    //"bFilter": false,
                    //"bInfo": false,
                    //"bLengthChange": false
                    //"bAutoWidth": false,
                    //"bPaginate": false,
                    //"bStateSave": true // saves sort state using localStorage
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_fixed_column) {
                            responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_fixed_column.respond();
                    }

                });

                // custom toolbar
                $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

                // Apply the filter
                $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {

                    otable
                        .column($(this).parent().index() + ':visible')
                        .search(this.value)
                        .draw();

                });
                /* END COLUMN FILTER */

                /* COLUMN SHOW - HIDE */
                $('#datatable_col_reorder').dataTable({
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_col_reorder) {
                            responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_col_reorder.respond();
                    }
                });

                /* END COLUMN SHOW - HIDE */

                /* TABLETOOLS */
                $('#datatable_tabletools').dataTable({

                    // Tabletools options:
                    //   https://datatables.net/extensions/tabletools/button_options
                    "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                    "oTableTools": {
                        "aButtons": [
                            "copy",
                            "csv",
                            "xls",
                            {
                                "sExtends": "pdf",
                                "sTitle": "SmartAdmin_PDF",
                                "sPdfMessage": "SmartAdmin PDF Export",
                                "sPdfSize": "letter"
                            },
                            {
                                "sExtends": "print",
                                "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                            }
                        ],
                        "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                    },
                    "autoWidth": true,
                    "preDrawCallback": function () {
                        // Initialize the responsive datatables helper once.
                        if (!responsiveHelper_datatable_tabletools) {
                            responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                        }
                    },
                    "rowCallback": function (nRow) {
                        responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                    },
                    "drawCallback": function (oSettings) {
                        responsiveHelper_datatable_tabletools.respond();
                    }
                });

                /* END TABLETOOLS */

            })

        </script>
    }
        <script src="~/Scripts/jquery-3.2.1.min.js"></script>
        <script src="~/Scripts/jquery.validate.min.js"></script>
        <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
        <script src="~/Scripts/plugin/datatables/jquery.dataTables.min.js"></script>
        <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
        <script>
            $(document).ready(function () {
                var oTable = $('#StaffDatatable').DataTable({
                    "ajax": {
                        "url": '/Staffs/GetStaff',
                        "type": "get",
                        "datatype": "json"
                    },
                    "columns": [
                        { "data": "FullName", "autoWidth": true },
                        { "data": "MobilePhone", "autoWidth": true },
                        { "data": "Address", "autoWidth": true },
                        { "data": "City", "autoWidth": true },
                        { "data": "Region", "autoWidth": true },
                        { "data": "PostalCode", "autoWidth": true },
                        { "data": "Country", "autoWidth": true },
                        {
                            "data": "Id", "render": function (data) {
                                return '<a  class="btn btn-primary btn-xs btn-info" onclick="EditUser("'+data+'");"><i class="fa fa-paste"></i> Edit</a>';
                            }
                        },
                        //{
                        //    "data": "Id", "Width": "20px", "render": function (data) {
                        //        return '<a data-toggle="modal" href="#myModal" class="btn btn-primary btn-xs btn-info"><i class="fa fa-paste"></i> Delete</a>';
                        //            //< a class="popup" href= "/employees/Delete/' + data + '" > Delete</a > ';
                        //    }
                        //},
                    ]
                })
                $('.tablecontainer').on('click', 'a.popup', function (e) {
                    e.preventDefault();
                    OpenPopup($(this).attr('href'));
                })
                function OpenPopup(pageUrl) {
                    var $pageContent = $('<div/>');
                    $pageContent.load(pageUrl, function () {
                        $('#popupForm', $pageContent).removeData('validator');
                        $('#popupForm', $pageContent).removeData('unobtrusiveValidation');
                        $.validator.unobtrusive.parse('form');

                    });

                    $dialog = $('<div class="popupWindow" style="overflow:auto"></div>')
                        .html($pageContent)
                        .dialog({
                            draggable: false,
                            autoOpen: false,
                            resizable: false,
                            modal: true,
                            Title: 'Employee Information',
                            height: 550,
                            widt: 600,
                            close: function () {
                                $dialog.dialog('destroy').remove();
                            }
                        })
                    $('popupWindow').on('submit', '#popupForm', function (e) {
                        var url = $('#popupForm')[0].action;
                        $.ajax({
                            type: "POST",
                            url: url,
                            data: $('#popupForm').serialize(),
                            success: function (data) {
                                if (data.status) {
                                    $dialog.dialog('close');
                                    oTable.ajax.reload();
                                }
                            }
                        })

                        e.preventDefault();
                    })

                    $dialog.dialog('open');
                }
            })
        </script>
