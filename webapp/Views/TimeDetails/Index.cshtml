@model TimeViewModel
@using SmartAdminMvc.Helpers

<link rel="stylesheet" type="text/css" media="screen" href="/Content/css/your_style.css">
<style type="text/css">
    td.details-control {
        background: url('/Content/img/plus.png') no-repeat center center;
        cursor: pointer;
    }

    tr.shown td.details-control {
        background: url('/Content/img/minus.png') no-repeat center center;
    }

    td.timeexpander {
        text-decoration: underline !important;
        cursor: pointer;
    }

    .expandertable {
        border: 2px solid black;
    }

        .expandertable tr td {
            text-align: center !important;
        }
</style>
<div id="content">

    <div class="row">
        <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
            <h1 class="page-title txt-color-blueDark">
                <i class="fa fa-user fa-fw "></i>
                Time Details
            </h1>
        </div>
        <div class="col-xs-12 col-sm-5 col-md-5 col-lg-8">
            <ul id="sparks" class="">
                <li class="sparks-info">
                    <h5> My Income <span class="txt-color-blue">$47,171</span></h5>
                    <div class="sparkline txt-color-blue hidden-mobile hidden-md hidden-sm">
                        1300, 1877, 2500, 2577, 2000, 2100, 3000, 2700, 3631, 2471, 2700, 3631, 2471
                    </div>
                </li>
                <li class="sparks-info">
                    <h5> Site Traffic <span class="txt-color-purple"><i class="fa fa-arrow-circle-up" data-rel="bootstrap-tooltip" title="Increased"></i>&nbsp;45%</span></h5>
                    <div class="sparkline txt-color-purple hidden-mobile hidden-md hidden-sm">
                        110,150,300,130,400,240,220,310,220,300, 270, 210
                    </div>
                </li>
                <li class="sparks-info">
                    <h5> Site Orders <span class="txt-color-greenDark"><i class="fa fa-shopping-cart"></i>&nbsp;2447</span></h5>
                    <div class="sparkline txt-color-greenDark hidden-mobile hidden-md hidden-sm">
                        110,150,300,130,400,240,220,310,220,300, 270, 210
                    </div>
                </li>
            </ul>
        </div>
    </div>

    <!-- widget grid -->
    <section id="widget-grid" class="">

        <!-- row -->
        <div class="tablecontainer">

            <!-- NEW WIDGET START -->
            <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">

                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget jarviswidget-color-blueDark" id="wid-id-1" data-widget-editbutton="false" data-widget-collapsed="false" data-widget-deletebutton="false" data-widget-colorbutton="false" data-widget-fullscreenbutton="false">
                    <!-- widget options:
                    usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                    data-widget-colorbutton="false"
                    data-widget-editbutton="false"
                    data-widget-togglebutton="false"
                    data-widget-deletebutton="false"
                    data-widget-fullscreenbutton="false"
                    data-widget-custombutton="false"
                    data-widget-collapsed="true"
                    data-widget-sortable="false"

                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-user"></i> </span>
                        <h2>Time</h2>

                    </header>

                    <!-- widget div-->
                    <div>

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body no-padding">
                            <table id="StaffDatatable" class="table table-striped table-bordered table-hover " style="width:100%;">

                                <thead>
                                    <tr>
                                        <th class="hasinput" style="width:10%">
                                            <input type="text" class="form-control" placeholder="Filter Staff Name" />
                                        </th>
                                        <th class="hasinput" style="width:8%">
                                            <input type="text" class="form-control" placeholder="Filter Home Phone" />
                                        </th>
                                        <th class="hasinput" style="width:20%">
                                            <input type="text" class="form-control" placeholder="Filter Address" />
                                        </th>
                                        <th class="hasinput" style="width:20%">
                                            <input type="text" class="form-control" placeholder="Filter City" />
                                        </th>
                                        <th class="hasinput" style="width:20%">
                                            <input type="text" class="form-control" placeholder="Filter Region" />
                                        </th>
                                        <th class="hasinput" style="width:8%">
                                            <input type="text" class="form-control" placeholder="Filter Postal Code" />
                                        </th>
                                        <th style="width:3%;">
                                            <input type="button" class="btn btn-primary btn-xs btn-info" value="Add Time Details" data-toggle="modal" data-target="#myModal" />
                                        </th>
                                    </tr>
                                    <tr>
                                        <th data-class="expand">Year</th>
                                        <th data-hide="phone,tablet">Period</th>
                                        <th data-hide="phone,tablet">Date From</th>
                                        <th data-hide="phone,tablet">Date To</th>
                                        <th data-hide="phone,tablet">Status</th>
                                        <th data-hide="phone,tablet">Hours</th>
                                        <th data-hide="phone,tablet">Deadline</th>
                                    </tr>
                                </thead>

                                <tfoot>
                                    <tr>
                                        <th data-class="expand">Year</th>
                                        <th data-hide="phone,tablet">Period</th>
                                        <th data-hide="phone,tablet">Date From</th>
                                        <th data-hide="phone,tablet">Date To</th>
                                        <th data-hide="phone,tablet">Status</th>
                                        <th data-hide="phone,tablet">Hours</th>
                                        <th data-hide="phone,tablet">Deadline</th>
                                    </tr>
                                </tfoot>

                            </table>


                            @*</div>*@

                        </div>
                        <!-- end widget content -->

                    </div>
                    <!-- end widget div -->

                </div>
                <!-- end widget -->

            </article>
            <!-- WIDGET END -->

        </div>

        <!-- end row -->

    </section>
    <!-- end widget grid -->
    <!-- Modal -->


    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog" style="width:700px;">
            @*<div class="modal-content animated bounceInRight">*@
            <div class="modal-content animated flipInX">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                        &times;
                    </button>
                    <h4 class="modal-title">
                        <img src="/content/img/logo.png" width="150" alt="SmartAdmin">
                    </h4>
                </div>
                <div class="modal-body no-padding">
                    @using (Html.BeginForm("SaveTime", "TimeDetails", FormMethod.Post, new { @class = "smart-form", @id = "checkout-form", @enctype = "multipart/form-data" }))
                    {
                        <fieldset style="border:0 none;">
                            <div class="row">
                                @Html.HiddenFor(m => m.TimeHeader.UserID, new { @id = "hdnUserID" })
                                @Html.HiddenFor(m => m.TimeHeader.TimeDate, new { @id = "hdnTimeDate" })
                                @Html.HiddenFor(m => m.DayNo, new { @id = "hdnDaysAdd" })
                                <input type="hidden" id="hdnDateFrom" />
                                <section class="col col-6">
                                    <label style="font-weight: bold;">Company</label>
                                    <label class="input">
                                        @Html.DropDownListFor(m => m.TimeHeader.CustomerID, DropdownListHelper.GetCompanyList(), new { @class = "form-control input-sm", @id = "company" })
                                    </label>
                                    <div class="row">
                                        <section class="col col-6">
                                            <label style="font-weight: bold;">Date</label>
                                            <label class="input">
                                                @Html.TextBoxFor(m => m.TimeHeader.TimeDate, new { @type = "text", @name = "state", @id = "date" })
                                            </label>
                                        </section>
                                        <section class="col col-6">
                                            <label style="font-weight: bold;"> &nbsp;</label>
                                            <div class="margin-top-5">
                                                @Html.CheckBoxFor(m => m.TimeHeader.Overnight, new { @name = "overnight", @id = "overnight" })
                                                Overnight
                                            </div>


                                        </section>
                                    </div>
                                    <label style="font-weight: bold;">Work Role</label>
                                    <label class="input">
                                        @Html.DropDownListFor(m => m.TimeHeader.WorkRoleID, DropdownListHelper.GetWorkList(), new { @class = "form-control input-sm", @id = "gender" })
                                    </label>
                                    <label style="font-weight: bold;">Aggrement</label>
                                    <label class="input">
                                        @Html.TextBoxFor(m => m.TimeHeader.Aggrement, new { @type = "text", @name = "aggrement", @placeholder = "Aggrement", @id = "aggrement" })
                                    </label>
                                </section>
                                <section class="col col-6">
                                    <label style="font-weight: bold;">Member</label>
                                    <label class="input">
                                        @Html.TextBoxFor(m => m.TimeHeader.UserID, new { @type = "text", @name = "userid", @placeholder = "Member", @id = "userid" })
                                    </label>

                                    <label style="font-weight: bold;">Division</label>
                                    <label class="input">
                                        @Html.DropDownListFor(m => m.TimeHeader.DivisonID, DropdownListHelper.GetDepartmentList(), new { @class = "form-control input-sm", @id = "division" })
                                    </label>
                                    <label style="font-weight: bold;">Department</label>
                                    <label class="input">
                                        @Html.DropDownListFor(m => m.TimeHeader.DivisonID, DropdownListHelper.GetDepartmentList(), new { @class = "form-control input-sm", @id = "department" })
                                    </label>
                                </section>
                            </div>
                            <h5>Time Details</h5>

                            <div class="row">
                                <section class="col col-2">
                                    <label style="font-weight: bold;">Start Time</label>
                                    <label class="input">
                                        @Html.TextBoxFor(m => m.TimeDetail.TimeIn, new { @type = "text", @name = "start", @placeholder = "Start Time", @id = "start" })
                                    </label>
                                </section>
                                <section class="col col-2">
                                    <label style="font-weight: bold;">End Time</label>
                                    <label class="input">
                                        @Html.TextBoxFor(m => m.TimeDetail.TimeOut, new { @type = "text", @name = "start", @placeholder = "Start Time", @id = "start" })
                                    </label>
                                </section>
                                <section class="col col-2">
                                    <label style="font-weight: bold;">Deduct</label>
                                    <label class="input">
                                        @Html.TextBoxFor(m => m.TimeDetail.TimeDeduct, new { @type = "text", @name = "timededuct", @id = "timededuct" })
                                    </label>
                                </section>
                                <section class="col col-2">
                                    <label style="font-weight: bold;">Actual Hrs</label>
                                    <label class="input">
                                        <input type="text" name="txtActualHours" />
                                    </label>
                                </section>
                                <section class="col col-2">
                                    <label style="font-weight: bold;">Work Type</label>
                                    <label class="input">
                                        @Html.DropDownListFor(m => m.TimeDetail.WorkTypeID, DropdownListHelper.GetWorkList(), new { @class = "form-control input-sm", @id = "gender" })
                                    </label>
                                </section>
                                <section class="col col-2">
                                    <label style="font-weight: bold;">Billable</label>
                                    <label class="input">
                                        @Html.DropDownListFor(m => m.TimeDetail.BillableID, DropdownListHelper.GetBillableList(), new { @class = "form-control input-sm", @id = "gender" })
                                    </label>
                                </section>
                            </div>
                            <div class="row">
                                <section class="col">
                                    <label style="font-weight: bold;">Notes</label>
                                    <label class="input">
                                        @Html.TextAreaFor(m => m.TimeDetail.Notes, new { @name = "start", @placeholder = "Enter Notes", @id = "start", @rows = "5", @cols = "70" })
                                    </label>
                                </section>

                            </div>


                        </fieldset>
                        <footer class="modal-footer">
                            <input type="submit" value="Save" name="Save" class="btn btn-success btn-sm" />
                            <button type="button" class="btn btn-dark btn-sm" data-dismiss="modal">Cancel</button>
                        </footer>

                    }

                </div>

            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
</div>

@section pagespecific {
    <script type="text/javascript">

        // DO NOT REMOVE : GLOBAL FUNCTIONS!

        $(document).ready(function () {

            /* // DOM Position key index //

            l - Length changing (dropdown)
            f - Filtering input (search)
            t - The Table! (datatable)
            i - Information (records)
            p - Pagination (paging)
            r - pRocessing
            < and > - div elements
            <"#id" and > - div with an id
            <"class" and > - div with a class
            <"#id.class" and > - div with an id and class

            Also see: http://legacy.datatables.net/usage/features
            */

            /* BASIC ;*/
            var responsiveHelper_dt_basic = undefined;
            var responsiveHelper_datatable_fixed_column = undefined;
            var responsiveHelper_datatable_col_reorder = undefined;
            var responsiveHelper_datatable_tabletools = undefined;

            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            $('#dt_basic').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                "t" +
                "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_dt_basic) {
                        responsiveHelper_dt_basic = new ResponsiveDatatablesHelper($('#dt_basic'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_dt_basic.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_dt_basic.respond();
                }
            });

            /* END BASIC */

            /* COLUMN FILTER  */
            var otable = $('#datatable_fixed_column').DataTable({
                //"bFilter": false,
                //"bInfo": false,
                //"bLengthChange": false
                //"bAutoWidth": false,
                //"bPaginate": false,
                //"bStateSave": true // saves sort state using localStorage
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6 hidden-xs'f><'col-sm-6 col-xs-12 hidden-xs'<'toolbar'>>r>" +
                "t" +
                "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_fixed_column) {
                        responsiveHelper_datatable_fixed_column = new ResponsiveDatatablesHelper($('#datatable_fixed_column'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_fixed_column.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_fixed_column.respond();
                }

            });

            // custom toolbar
            $("div.toolbar").html('<div class="text-right"><img src="/Content/img/logo.png" alt="SmartAdmin" style="width: 111px; margin-top: 3px; margin-right: 10px;"></div>');

            // Apply the filter
            $("#datatable_fixed_column thead th input[type=text]").on('keyup change', function () {

                otable
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();

            });
            /* END COLUMN FILTER */

            /* COLUMN SHOW - HIDE */
            $('#datatable_col_reorder').dataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'C>r>" +
                "t" +
                "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_col_reorder) {
                        responsiveHelper_datatable_col_reorder = new ResponsiveDatatablesHelper($('#datatable_col_reorder'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_col_reorder.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_col_reorder.respond();
                }
            });

            /* END COLUMN SHOW - HIDE */

            /* TABLETOOLS */
            $('#datatable_tabletools').dataTable({

                // Tabletools options:
                //   https://datatables.net/extensions/tabletools/button_options
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'T>r>" +
                "t" +
                "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-sm-6 col-xs-12'p>>",
                "oTableTools": {
                    "aButtons": [
                        "copy",
                        "csv",
                        "xls",
                        {
                            "sExtends": "pdf",
                            "sTitle": "SmartAdmin_PDF",
                            "sPdfMessage": "SmartAdmin PDF Export",
                            "sPdfSize": "letter"
                        },
                        {
                            "sExtends": "print",
                            "sMessage": "Generated by SmartAdmin <i>(press Esc to close)</i>"
                        }
                    ],
                    "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_datatable_tabletools.respond();
                }
            });

            /* END TABLETOOLS */

        })

    </script>
}
<script src="~/Scripts/jquery-3.2.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/plugin/datatables/jquery.dataTables.min.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<script src="~/Scripts/plugin/clockpicker/clockpicker.min.js"></script>
<script src="~/Scripts/plugin/moment/moment.min.js"></script>
<script type="text/javascript">
    function format(d) {
        // `d` is the original data object for the row
        debugger;
        var DateFrom = d.DateFromJ;
        $("#hdnDateFrom").val(DateFrom);
        var day1;
        var day2;
        var day3;
        var day4;
        var day5;
        var day6;
        var day7;

        var new_date = moment(DateFrom, "DD-MMM-YYYY").add('days', 0);
        var day = new_date.format('ddd');
        var date = new_date.format('DD');
        var month = new_date.format('MM');
        day1 = day + "<br/>" + date + "/" + month;

        new_date = moment(DateFrom, "DD-MMM-YYYY").add('days', 1);
        day = new_date.format('ddd');
        date = new_date.format('DD');
        month = new_date.format('MM');
        day2 = day + "<br/>" + date + "/" + month;

        new_date = moment(DateFrom, "DD-MMM-YYYY").add('days', 2);
        day = new_date.format('ddd');
        date = new_date.format('DD');
        month = new_date.format('MM');
        day3 = day + "<br/>" + date + "/" + month;

        new_date = moment(DateFrom, "DD-MMM-YYYY").add('days', 3);
        day = new_date.format('ddd');
        date = new_date.format('DD');
        month = new_date.format('MM');
        day4 = day + "<br/>" + date + "/" + month;

        new_date = moment(DateFrom, "DD-MMM-YYYY").add('days', 4);
        day = new_date.format('ddd');
        date = new_date.format('DD');
        month = new_date.format('MM');
        day5 = day + "<br/>" + date + "/" + month;

        new_date = moment(DateFrom, "DD-MMM-YYYY").add('days', 5);
        day = new_date.format('ddd');
        date = new_date.format('DD');
        month = new_date.format('MM');
        day6 = day + "<br/>" + date + "/" + month;

        new_date = moment(DateFrom, "DD-MMM-YYYY").add('days', 6);
        day = new_date.format('ddd');
        date = new_date.format('DD');
        month = new_date.format('MM');
        day7 = day + "<br/>" + date + "/" + month;
        $("#hdnUserID").val(d.UserID);
        return '<table  border="1" style="width:80%;margin-left:10%;margin-right:10%;align:center" class="expandertable">' +
            '<tr><td>' + day1 + '</td><td>' + day2 + '</td><td>' + day3 + '</td><td>' + day4 + '</td><td>' + day5 + '</td><td>' + day6 + '</td><td>' + day7 + '</td><td>Total</td></tr>' +
            '<tr><td class="details-control" onclick="ShowTimePopup(0);"></td><td class="details-control" onclick="ShowTimePopup(1);"></td><td class="details-control" onclick="ShowTimePopup(2);"></td><td class="details-control" onclick="ShowTimePopup(3);"></td><td class="details-control" onclick="ShowTimePopup(4);"></td><td class="details-control" onclick="ShowTimePopup(5);"></td><td class="details-control" onclick="ShowTimePopup(6);"></td><td></td></tr>' +
            '<tr ><td style="background-color:#e0e0e0;">' + d.Day1J + '</td><td style="background-color:#e0e0e0;">' + d.Day2J + '</td><td style="background-color:#e0e0e0;">' + d.Day3J + '</td><td style="background-color:#e0e0e0;">' + d.Day4J + '</td><td style="background-color:#e0e0e0;">' + d.Day5J + '</td><td style="background-color:#e0e0e0;">' + d.Day6J + '</td><td style="background-color:#e0e0e0;">' + d.Day7J + '</td><td style="background-color:#e0e0e0;">' + d.HoursJ + '</td></tr>' +
            '</table > ';
    }
    function ShowTimePopup(obj) {
        debugger;
        $("#hdnTimeDate").val($("#hdnDateFrom").val());
        $("#hdnDaysAdd").val(obj);
        $("#myModal").modal('show');
    }
</script>
<script>
    $(document).ready(function () {
        var oTable = $('#StaffDatatable').DataTable({
            "ajax": {
                "url": '/TimeDetails/GetTimeSheetDetails',
                "type": "get",
                "data": {
                    "UserID": 1
                },
                "datatype": "json"
            },
            "columns": [

                { "data": "Year", "autoWidth": true },
                { "data": "Period", "autoWidth": true },
                { "data": "DateFromJ", "autoWidth": true, "className": 'timeexpander', },
                { "data": "DateToJ", "autoWidth": true, "className": 'timeexpander', },
                { "data": "Status", "autoWidth": true },
                { "data": "HoursJ", "autoWidth": true },
                { "data": "DeadLineJ", "autoWidth": true },

                //{
                //    "data": "Id", "Width": "20px", "render": function (data) {
                //        return '<a data-toggle="modal" href="#myModal" class="btn btn-primary btn-xs btn-info"><i class="fa fa-paste"></i> Delete</a>';
                //            //< a class="popup" href= "/employees/Delete/' + data + '" > Delete</a > ';
                //    }
                //},
            ]
        })
        // Add event listener for opening and closing details
        $('#StaffDatatable tbody').on('click', 'td.timeexpander', function () {
            var tr = $(this).closest('tr');
            var row = oTable.row(tr);

            if (row.child.isShown()) {
                // This row is already open - close it
                row.child.hide();
                tr.removeClass('shown');
            }
            else {
                // Open this row
                row.child(format(row.data())).show();
                tr.addClass('shown');
            }
        });
        $('.tablecontainer').on('click', 'a.popup', function (e) {
            e.preventDefault();
            OpenPopup($(this).attr('href'));
        })
        function OpenPopup(pageUrl) {
            var $pageContent = $('<div/>');
            $pageContent.load(pageUrl, function () {
                $('#popupForm', $pageContent).removeData('validator');
                $('#popupForm', $pageContent).removeData('unobtrusiveValidation');
                $.validator.unobtrusive.parse('form');

            });

            $dialog = $('<div class="popupWindow" style="overflow:auto"></div>')
                .html($pageContent)
                .dialog({
                    draggable: false,
                    autoOpen: false,
                    resizable: false,
                    modal: true,
                    Title: 'Employee Information',
                    height: 550,
                    widt: 600,
                    close: function () {
                        $dialog.dialog('destroy').remove();
                    }
                })
            $('popupWindow').on('submit', '#popupForm', function (e) {
                var url = $('#popupForm')[0].action;
                $.ajax({
                    type: "POST",
                    url: url,
                    data: $('#popupForm').serialize(),
                    success: function (data) {
                        if (data.status) {
                            $dialog.dialog('close');
                            oTable.ajax.reload();
                        }
                    }
                })

                e.preventDefault();
            })

            $dialog.dialog('open');
        }
    })
</script>
